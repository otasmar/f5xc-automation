trigger:
- main

variables:
  TF_ROOT: "terraform"
  API_CERT_PASSWORD: $(apiCertPassword)

pool:
  name: o-alasmar-windows-image

stages:
# -------------------
# Stage 1: Init
# -------------------
- stage: Init
  jobs:
  - job: TerraformInit
    steps:
    - script: |
        curl -sLo terraform.zip https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip
        unzip terraform.zip
        sudo mv terraform /usr/local/bin/
        terraform -version
      displayName: 'Install Terraform'

    - script: |
        curl -L -o terraform-provider-volterra.zip https://github.com/f5devcentral/terraform-provider-volterra/releases/latest/download/terraform-provider-volterra-linux-amd64.zip
        mkdir -p ~/.terraform.d/plugins
        unzip terraform-provider-volterra.zip -d ~/.terraform.d/plugins
        chmod +x ~/.terraform.d/plugins/terraform-provider-volterra
      displayName: 'Install Volterra Provider'

    - script: |
        cd $(Build.SourcesDirectory)/${TF_ROOT}
        terraform init
      displayName: 'Terraform Init'

# -------------------
# Stage 2: Plan
# -------------------
- stage: Plan
  dependsOn: Init
  jobs:
  - job: TerraformPlan
    steps:
    - script: |
        cd $(Build.SourcesDirectory)/${TF_ROOT}
        terraform plan -var="api_cert_password=$(API_CERT_PASSWORD)"
      displayName: 'Terraform Plan'

# -------------------
# Stage 3: Apply
# -------------------
- stage: Apply
  dependsOn: Plan
  jobs:
  - job: TerraformApply
    steps:
    - script: |
        cd $(Build.SourcesDirectory)/${TF_ROOT}
        terraform apply -auto-approve -var="api_cert_password=$(API_CERT_PASSWORD)"
      displayName: 'Terraform Apply'
